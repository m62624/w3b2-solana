syntax = "proto3";

package w3b2.protocol.gateway;
import "types.proto";

import "google/protobuf/empty.proto";

// ===================================================================
// == Service Definition: BridgeGatewayService
// ===================================================================
/// The gRPC service for the W3B2 toolset.
///
/// Its sole responsibility is to provide real-time, persistent event streams
/// from the on-chain program to off-chain clients.
service BridgeGatewayService {

  // ===================================================================
  // == Event Streaming RPCs
  // ===================================================================

  /// Subscribes to and streams all events for a specific UserProfile PDA.
  /// This is a server-streaming RPC. The client makes a single request with the
  /// PDA, and the server streams back all relevant historical (catch-up) and
  /// real-time (live) events. The stream is closed when the client disconnects.
  rpc ListenAsUser(ListenRequest) returns (stream EventStreamItem);

  /// Subscribes to and streams all categorized events for a specific Admin.
  /// This is a server-streaming RPC. The client makes a single request with the
  /// AdminProfile PDA, and the server streams back all relevant historical and
  /// real-time events.
  rpc ListenAsAdmin(ListenRequest) returns (stream EventStreamItem);

  /// Manually unsubscribes a client from an active event stream using its
  /// unique subscription ID.
  rpc Unsubscribe(UnsubscribeRequest) returns (google.protobuf.Empty);
}