services:
  builder:
    build:
      context: .
      dockerfile: Dockerfile.rust.builder
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
        ANCHOR_VERSION: ${ANCHOR_VERSION}
        PROGRAM_KEYPAIR_PATH: ${PROGRAM_KEYPAIR_PATH:-/keys/program-keypair.json}
    image: w3b2-builder
    pull_policy: never
    env_file:
      - .env
    profiles: ["builder", "deploy", "full"]
    volumes:
      - ./artifacts:/project/artifacts
      - ./target:/project/target
      - ./keys:/keys
    working_dir: /project
    command: >
      bash -c "
        HOST_UID=${UID:-1000} HOST_GID=${GID:-1000} /usr/local/bin/build_and_deploy.sh --build-only
      "

  solana-validator:
    build:
      context: .
      dockerfile: Dockerfile.validator
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
    env_file:
      - .env
    profiles: ["validator", "deploy", "full"]
    ports:
      - "${SOLANA_VALIDATOR_RPC_PORT:-8899}:8899" # RPC
      - "${SOLANA_VALIDATOR_WS_PORT:-8900}:8900" # Websocket
      - "8901:8901" # Faucet
    volumes:
      - solana-ledger:/ledger
    command: >
      bash -c "solana-test-validator --ledger /ledger --reset 2>&1 | awk '{if (!p) print; fflush()} /Processed Slot/ {p=1}'"


  deployer:
    build:
      context: .
      dockerfile: Dockerfile.rust.builder
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
        ANCHOR_VERSION: ${ANCHOR_VERSION}
        PROGRAM_KEYPAIR_PATH: ${PROGRAM_KEYPAIR_PATH:-/keys/program-keypair.json}
    image: w3b2-builder
    pull_policy: never
    profiles: ["deploy", "full"]
    depends_on:
      solana-validator:
        condition: service_started
      builder:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - SOLANA_RPC_URL=http://solana-validator:8899
    volumes:
      - ./artifacts:/project/artifacts
      - ./keys:/keys
    working_dir: /project
    command: /usr/local/bin/build_and_deploy.sh --deploy

  gateway:
    build:
      context: .
      dockerfile: Dockerfile.rust.builder
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
        ANCHOR_VERSION: ${ANCHOR_VERSION}
        PROGRAM_KEYPAIR_PATH: ${PROGRAM_KEYPAIR_PATH:-/keys/program-keypair.json}
    image: w3b2-builder
    pull_policy: never
    profiles: ["gateway", "full"]
    depends_on:
      solana-validator:
        condition: service_started
      deployer:
        condition: service_completed_successfully
    ports:
      - "${GATEWAY_PORT}:50051"
    env_file:
      - .env
    volumes:
      - ./artifacts:/project/artifacts 
      - ./target:/project/target
      - ./keys:/keys
      - ./config.docker.toml:/project/config.docker.toml
      - gateway-data:/data
    working_dir: /project
    command: >
      bash -c "
        # The PROGRAM_ID might be empty on the first run, so we read it from the IDL.
        if [ -z \"$${PROGRAM_ID}\" ]; then
          export PROGRAM_ID=$$(cat /project/artifacts/w3b2_solana_program.json | jq -r .metadata.address);
        fi;
        # Update the connector's PROGRAM_ID in the environment for the gateway process
        export W3B2_CONNECTOR__PROGRAM_ID=$${PROGRAM_ID};
        echo 'Starting gateway with PROGRAM_ID='$${PROGRAM_ID};
        /project/target/release/w3b2-solana-gateway run --config /project/config.docker.toml
      "

  docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    profiles: ["docs", "full"]
    ports:
      - "${DOCS_PORT}:8000"
    volumes:
      - ./docs:/project/docs # Mount the entire docs directory
      - ./docs/mkdocs.yml:/project/mkdocs.yml # The config file is now inside docs
volumes:
  solana-ledger:
  gateway-data: