services:
  builder:
    build:
      context: .
      dockerfile: docker/Dockerfile.rust.builder
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
        ANCHOR_VERSION: ${ANCHOR_VERSION}
        PROGRAM_KEYPAIR_PATH: ${PROGRAM_KEYPAIR_PATH:-/keys/program-keypair.json}
    image: w3b2-builder
    pull_policy: never
    env_file:
      - .env
    profiles: ["builder", "deploy", "full"]
    volumes:
      - ./artifacts:/app/artifacts
      - ./target:/app/target
      - ./keys:/keys
    working_dir: /app
    command: >
      bash -c "
        HOST_UID=${UID:-1000} HOST_GID=${GID:-1000} /usr/local/bin/build_and_deploy.sh --build-only
      "

  solana-validator:
    build:
      context: .
      dockerfile: docker/Dockerfile.validator
      args:
        SOLANA_VERSION: ${SOLANA_VERSION}
    profiles: ["validator", "deploy", "full"]
    ports:
      - "${SOLANA_VALIDATOR_RPC_PORT_EXTERNAL}:${SOLANA_VALIDATOR_RPC_PORT_INTERNAL}" # RPC
      - "${SOLANA_VALIDATOR_WS_PORT_EXTERNAL}:${SOLANA_VALIDATOR_WS_PORT_INTERNAL}" # Websocket
      - "${SOLANA_VALIDATOR_FAUCET_PORT_EXTERNAL}:${SOLANA_VALIDATOR_FAUCET_PORT_INTERNAL}" # Faucet
    volumes:
      - solana-ledger:/ledger
    command: >
      bash -c "solana-test-validator --ledger /ledger --reset 2>&1 | awk '{if (!p) print; fflush()} /Processed Slot/ {p=1}'"

  deployer:
    image: w3b2-builder
    pull_policy: never
    profiles: ["deploy", "full"]
    depends_on:
      solana-validator:
        condition: service_started
      builder:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - SOLANA_RPC_URL=http://solana-validator:8899
    volumes:
      - ./artifacts:/app/artifacts
      - ./keys:/keys
    working_dir: /app
    command: /usr/local/bin/build_and_deploy.sh --deploy

  gateway:
    image: w3b2-builder
    pull_policy: never
    profiles: ["gateway", "full"]
    depends_on:
      solana-validator:
        condition: service_started
      deployer:
        condition: service_completed_successfully
    env_file:
      - .env
    ports:
      - "${GATEWAY_PORT_EXTERNAL}:${GATEWAY_PORT_INTERNAL}"
    volumes:
      - ./artifacts:/app/artifacts 
      - ./target:/app/target
      - ./keys:/keys
      - ./${GATEWAY_CONFIG_PATH}:/app/${GATEWAY_CONFIG_PATH}
      - gateway-data:/data
    working_dir: /app
    command: /usr/local/bin/run_gateway.sh

  tester:
    image: w3b2-builder
    pull_policy: never
    profiles: ["tester", "full"]
    depends_on:
      gateway:
        condition: service_started
      builder:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - GATEWAY_HOST=gateway # Service name inside docker network
      - GATEWAY_PORT=${GATEWAY_PORT_INTERNAL}
      - RUST_LOG=info
    volumes:
      # Mount all necessary directories
      - ./artifacts:/app/artifacts
      - ./target:/app/target
    working_dir: /app
    command: /usr/local/bin/run_tests.sh

  docs:
    build:
      context: .
      dockerfile: docker/Dockerfile.docs
    profiles: ["docs", "full"]
    ports:
      - "${DOCS_PORT_EXTERNAL}:${DOCS_PORT_INTERNAL}"
    volumes:
      - ./docs:/project/docs # Mount the entire docs directory
      - ./docs/mkdocs.yml:/project/mkdocs.yml # The config file is now inside docs
volumes:
  solana-ledger:
  gateway-data: